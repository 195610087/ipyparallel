<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1094" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1077.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1077.00"> </text><g id="frames"><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="580" width="1" height="15" fill="rgb(214,122,26)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="596" width="1" height="15" fill="rgb(232,7,41)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="612" width="1" height="15" fill="rgb(243,177,41)"/><text x="13.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="628" width="1" height="15" fill="rgb(206,50,54)"/><text x="13.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.09%)</title><rect x="10" y="644" width="1" height="15" fill="rgb(249,79,45)"/><text x="13.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="660" width="1" height="15" fill="rgb(245,183,16)"/><text x="13.00" y="670.50"></text></g><g><title>&lt;module&gt; (prompt_toolkit/__init__.py) (3 samples, 0.09%)</title><rect x="10" y="676" width="1" height="15" fill="rgb(225,205,26)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="692" width="1" height="15" fill="rgb(246,221,13)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="708" width="1" height="15" fill="rgb(232,6,54)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="724" width="1" height="15" fill="rgb(226,191,30)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.09%)</title><rect x="10" y="740" width="1" height="15" fill="rgb(221,51,38)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="756" width="1" height="15" fill="rgb(235,59,50)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (prompt_toolkit/application/__init__.py) (3 samples, 0.09%)</title><rect x="10" y="772" width="1" height="15" fill="rgb(227,196,49)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="788" width="1" height="15" fill="rgb(227,23,20)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="804" width="1" height="15" fill="rgb(251,151,14)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="10" y="820" width="1" height="15" fill="rgb(254,69,1)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.09%)</title><rect x="10" y="836" width="1" height="15" fill="rgb(231,59,10)"/><text x="13.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.15%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(252,87,52)"/><text x="14.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.15%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(210,65,7)"/><text x="14.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.12%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(238,101,16)"/><text x="14.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.12%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(244,106,15)"/><text x="14.00" y="990.50"></text></g><g><title>&lt;module&gt; (IPython/terminal/interactiveshell.py) (10 samples, 0.29%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(220,154,44)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 0.29%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(240,63,54)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 0.29%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(248,1,27)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="580" width="2" height="15" fill="rgb(250,189,22)"/><text x="14.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.20%)</title><rect x="11" y="596" width="2" height="15" fill="rgb(215,216,9)"/><text x="14.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="612" width="2" height="15" fill="rgb(220,54,48)"/><text x="14.00" y="622.50"></text></g><g><title>&lt;module&gt; (IPython/terminal/debugger.py) (7 samples, 0.20%)</title><rect x="11" y="628" width="2" height="15" fill="rgb(226,136,16)"/><text x="14.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="644" width="2" height="15" fill="rgb(222,82,40)"/><text x="14.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="660" width="2" height="15" fill="rgb(225,193,5)"/><text x="14.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="676" width="2" height="15" fill="rgb(221,204,11)"/><text x="14.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.20%)</title><rect x="11" y="692" width="2" height="15" fill="rgb(238,167,5)"/><text x="14.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="708" width="2" height="15" fill="rgb(219,130,44)"/><text x="14.00" y="718.50"></text></g><g><title>&lt;module&gt; (IPython/core/completer.py) (7 samples, 0.20%)</title><rect x="11" y="724" width="2" height="15" fill="rgb(240,163,16)"/><text x="14.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="740" width="2" height="15" fill="rgb(252,109,9)"/><text x="14.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="756" width="2" height="15" fill="rgb(228,201,41)"/><text x="14.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="772" width="2" height="15" fill="rgb(228,88,4)"/><text x="14.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.20%)</title><rect x="11" y="788" width="2" height="15" fill="rgb(224,31,52)"/><text x="14.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="804" width="2" height="15" fill="rgb(246,53,21)"/><text x="14.00" y="814.50"></text></g><g><title>&lt;module&gt; (jedi/__init__.py) (7 samples, 0.20%)</title><rect x="11" y="820" width="2" height="15" fill="rgb(247,24,32)"/><text x="14.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="836" width="2" height="15" fill="rgb(207,20,43)"/><text x="14.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="852" width="2" height="15" fill="rgb(233,214,23)"/><text x="14.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(216,199,1)"/><text x="14.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.20%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(233,47,44)"/><text x="14.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(242,229,48)"/><text x="14.00" y="910.50"></text></g><g><title>&lt;module&gt; (jedi/api/__init__.py) (7 samples, 0.20%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(219,129,37)"/><text x="14.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.17%)</title><rect x="13" y="804" width="2" height="15" fill="rgb(220,114,53)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (6 samples, 0.17%)</title><rect x="13" y="820" width="2" height="15" fill="rgb(224,84,40)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.17%)</title><rect x="13" y="836" width="2" height="15" fill="rgb(209,202,29)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.17%)</title><rect x="13" y="852" width="2" height="15" fill="rgb(223,79,6)"/><text x="16.00" y="862.50"></text></g><g><title>&lt;module&gt; (IPython/core/magics/code.py) (7 samples, 0.20%)</title><rect x="13" y="724" width="3" height="15" fill="rgb(212,53,52)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="13" y="740" width="3" height="15" fill="rgb(217,201,45)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="13" y="756" width="3" height="15" fill="rgb(240,25,34)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="13" y="772" width="3" height="15" fill="rgb(229,3,50)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.20%)</title><rect x="13" y="788" width="3" height="15" fill="rgb(227,175,27)"/><text x="16.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 0.55%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(246,42,45)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 0.55%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(245,0,25)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 0.55%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(207,5,35)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 0.55%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(232,19,30)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 0.55%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(211,86,52)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (IPython/terminal/ipapp.py) (8 samples, 0.23%)</title><rect x="13" y="532" width="3" height="15" fill="rgb(236,115,47)"/><text x="16.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="13" y="548" width="3" height="15" fill="rgb(225,186,8)"/><text x="16.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="13" y="564" width="3" height="15" fill="rgb(225,210,8)"/><text x="16.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="13" y="580" width="3" height="15" fill="rgb(216,215,43)"/><text x="16.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.23%)</title><rect x="13" y="596" width="3" height="15" fill="rgb(230,55,52)"/><text x="16.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="13" y="612" width="3" height="15" fill="rgb(208,52,42)"/><text x="16.00" y="622.50"></text></g><g><title>&lt;module&gt; (IPython/core/magics/__init__.py) (8 samples, 0.23%)</title><rect x="13" y="628" width="3" height="15" fill="rgb(226,115,32)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="13" y="644" width="3" height="15" fill="rgb(235,1,23)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="13" y="660" width="3" height="15" fill="rgb(235,105,18)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="13" y="676" width="3" height="15" fill="rgb(252,52,46)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.23%)</title><rect x="13" y="692" width="3" height="15" fill="rgb(246,183,49)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="13" y="708" width="3" height="15" fill="rgb(223,164,54)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (ipyparallel/client/asyncresult.py) (21 samples, 0.61%)</title><rect x="10" y="244" width="7" height="15" fill="rgb(209,229,11)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 0.61%)</title><rect x="10" y="260" width="7" height="15" fill="rgb(229,86,6)"/><text x="13.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 0.61%)</title><rect x="10" y="276" width="7" height="15" fill="rgb(217,214,32)"/><text x="13.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 0.61%)</title><rect x="10" y="292" width="7" height="15" fill="rgb(223,3,39)"/><text x="13.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 0.61%)</title><rect x="10" y="308" width="7" height="15" fill="rgb(225,86,38)"/><text x="13.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 0.61%)</title><rect x="10" y="324" width="7" height="15" fill="rgb(221,151,26)"/><text x="13.00" y="334.50"></text></g><g><title>&lt;module&gt; (IPython/__init__.py) (21 samples, 0.61%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(214,28,10)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 0.61%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(220,19,36)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 0.61%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(215,211,29)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 0.61%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(232,49,54)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 0.61%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(240,70,45)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 0.61%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(216,218,51)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (IPython/terminal/embed.py) (21 samples, 0.61%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(234,159,18)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.17%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(206,160,50)"/><text x="20.00" y="990.50"></text></g><g><title>&lt;module&gt; (asyncio/unix_events.py) (4 samples, 0.12%)</title><rect x="18" y="996" width="1" height="15" fill="rgb(250,226,39)"/><text x="21.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.12%)</title><rect x="18" y="1012" width="1" height="15" fill="rgb(254,226,54)"/><text x="21.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.12%)</title><rect x="18" y="1028" width="1" height="15" fill="rgb(233,190,18)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.12%)</title><rect x="18" y="1044" width="1" height="15" fill="rgb(247,119,26)"/><text x="21.00" y="1054.50"></text></g><g><title>&lt;module&gt; (ipyparallel/__init__.py) (29 samples, 0.84%)</title><rect x="10" y="148" width="9" height="15" fill="rgb(228,45,46)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (29 samples, 0.84%)</title><rect x="10" y="164" width="9" height="15" fill="rgb(244,170,14)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (29 samples, 0.84%)</title><rect x="10" y="180" width="9" height="15" fill="rgb(250,214,23)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (29 samples, 0.84%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(253,104,8)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (29 samples, 0.84%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(233,205,36)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (29 samples, 0.84%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(231,115,18)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (ipyparallel/serialize/__init__.py) (8 samples, 0.23%)</title><rect x="17" y="244" width="2" height="15" fill="rgb(206,54,3)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="260" width="2" height="15" fill="rgb(238,57,33)"/><text x="20.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(211,30,21)"/><text x="20.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(221,172,23)"/><text x="20.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.23%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(225,215,48)"/><text x="20.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="324" width="2" height="15" fill="rgb(221,214,30)"/><text x="20.00" y="334.50"></text></g><g><title>&lt;module&gt; (ipyparallel/serialize/serialize.py) (8 samples, 0.23%)</title><rect x="17" y="340" width="2" height="15" fill="rgb(231,173,18)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="356" width="2" height="15" fill="rgb(219,143,12)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="372" width="2" height="15" fill="rgb(245,185,38)"/><text x="20.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="388" width="2" height="15" fill="rgb(232,70,37)"/><text x="20.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.23%)</title><rect x="17" y="404" width="2" height="15" fill="rgb(251,32,18)"/><text x="20.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="420" width="2" height="15" fill="rgb(222,136,17)"/><text x="20.00" y="430.50"></text></g><g><title>&lt;module&gt; (jupyter_client/session.py) (8 samples, 0.23%)</title><rect x="17" y="436" width="2" height="15" fill="rgb(232,12,29)"/><text x="20.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="452" width="2" height="15" fill="rgb(228,143,34)"/><text x="20.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="468" width="2" height="15" fill="rgb(237,116,17)"/><text x="20.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="484" width="2" height="15" fill="rgb(243,190,16)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="500" width="2" height="15" fill="rgb(253,164,47)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="516" width="2" height="15" fill="rgb(226,73,12)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="532" width="2" height="15" fill="rgb(226,48,9)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.23%)</title><rect x="17" y="548" width="2" height="15" fill="rgb(212,207,25)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="564" width="2" height="15" fill="rgb(228,63,1)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (zmq/eventloop/__init__.py) (8 samples, 0.23%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(230,3,16)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(224,9,37)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(252,194,50)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(224,218,46)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.23%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(213,57,36)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(243,68,35)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (zmq/eventloop/ioloop.py) (8 samples, 0.23%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(213,22,18)"/><text x="20.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(233,155,50)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(212,64,40)"/><text x="20.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(238,12,21)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(227,218,6)"/><text x="20.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(233,54,3)"/><text x="20.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.20%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(223,21,45)"/><text x="20.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(245,85,54)"/><text x="20.00" y="798.50"></text></g><g><title>&lt;module&gt; (tornado/ioloop.py) (7 samples, 0.20%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(244,146,16)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(222,174,43)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(243,222,2)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(205,129,23)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.20%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(248,188,25)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(206,227,7)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (7 samples, 0.20%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(209,84,5)"/><text x="20.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(211,145,29)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(214,222,13)"/><text x="20.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.20%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(216,105,16)"/><text x="20.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.20%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(243,189,15)"/><text x="20.00" y="974.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (5 samples, 0.15%)</title><rect x="19" y="276" width="2" height="15" fill="rgb(236,229,14)"/><text x="22.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.15%)</title><rect x="19" y="292" width="2" height="15" fill="rgb(241,73,53)"/><text x="22.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.15%)</title><rect x="19" y="308" width="2" height="15" fill="rgb(228,36,16)"/><text x="22.00" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.15%)</title><rect x="19" y="324" width="2" height="15" fill="rgb(251,201,31)"/><text x="22.00" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.15%)</title><rect x="19" y="340" width="2" height="15" fill="rgb(228,133,52)"/><text x="22.00" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.15%)</title><rect x="19" y="356" width="2" height="15" fill="rgb(235,219,0)"/><text x="22.00" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.15%)</title><rect x="19" y="372" width="2" height="15" fill="rgb(238,139,32)"/><text x="22.00" y="382.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.09%)</title><rect x="20" y="388" width="1" height="15" fill="rgb(251,182,7)"/><text x="23.00" y="398.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.09%)</title><rect x="20" y="404" width="1" height="15" fill="rgb(229,64,22)"/><text x="23.00" y="414.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="19" y="164" width="3" height="15" fill="rgb(234,61,2)"/><text x="22.00" y="174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="19" y="180" width="3" height="15" fill="rgb(236,31,6)"/><text x="22.00" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="19" y="196" width="3" height="15" fill="rgb(241,38,10)"/><text x="22.00" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="19" y="212" width="3" height="15" fill="rgb(225,4,3)"/><text x="22.00" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="19" y="228" width="3" height="15" fill="rgb(213,51,39)"/><text x="22.00" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.23%)</title><rect x="19" y="244" width="3" height="15" fill="rgb(228,67,52)"/><text x="22.00" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.23%)</title><rect x="19" y="260" width="3" height="15" fill="rgb(234,112,7)"/><text x="22.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (47 samples, 1.37%)</title><rect x="10" y="68" width="16" height="15" fill="rgb(226,158,51)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (47 samples, 1.37%)</title><rect x="10" y="84" width="16" height="15" fill="rgb(254,13,10)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (47 samples, 1.37%)</title><rect x="10" y="100" width="16" height="15" fill="rgb(241,175,51)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (47 samples, 1.37%)</title><rect x="10" y="116" width="16" height="15" fill="rgb(228,68,19)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (47 samples, 1.37%)</title><rect x="10" y="132" width="16" height="15" fill="rgb(211,164,53)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (18 samples, 0.52%)</title><rect x="19" y="148" width="7" height="15" fill="rgb(217,161,52)"/><text x="22.00" y="158.50"></text></g><g><title>_sanity_check (numpy/__init__.py) (10 samples, 0.29%)</title><rect x="22" y="164" width="4" height="15" fill="rgb(214,131,14)"/><text x="25.00" y="174.50"></text></g><g><title>can_sequence (ipyparallel/serialize/canning.py) (6 samples, 0.17%)</title><rect x="31" y="292" width="2" height="15" fill="rgb(243,138,10)"/><text x="34.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (ipyparallel/serialize/canning.py) (5 samples, 0.15%)</title><rect x="31" y="308" width="2" height="15" fill="rgb(209,63,12)"/><text x="34.00" y="318.50"></text></g><g><title>can (ipyparallel/serialize/canning.py) (4 samples, 0.12%)</title><rect x="31" y="324" width="2" height="15" fill="rgb(216,25,29)"/><text x="34.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (ipyparallel/client/remotefunction.py) (17 samples, 0.49%)</title><rect x="27" y="244" width="6" height="15" fill="rgb(231,139,38)"/><text x="30.00" y="254.50"></text></g><g><title>__init__ (ipyparallel/serialize/serialize.py) (15 samples, 0.44%)</title><rect x="28" y="260" width="5" height="15" fill="rgb(210,60,22)"/><text x="31.00" y="270.50"></text></g><g><title>serialize_object (ipyparallel/serialize/serialize.py) (14 samples, 0.41%)</title><rect x="28" y="276" width="5" height="15" fill="rgb(230,175,51)"/><text x="31.00" y="286.50"></text></g><g><title>__get__ (traitlets/traitlets.py) (3 samples, 0.09%)</title><rect x="34" y="276" width="1" height="15" fill="rgb(212,41,16)"/><text x="37.00" y="286.50"></text></g><g><title>get (traitlets/traitlets.py) (3 samples, 0.09%)</title><rect x="34" y="292" width="1" height="15" fill="rgb(214,118,18)"/><text x="37.00" y="302.50"></text></g><g><title>__set__ (traitlets/traitlets.py) (6 samples, 0.17%)</title><rect x="36" y="308" width="2" height="15" fill="rgb(254,208,19)"/><text x="39.00" y="318.50"></text></g><g><title>set (traitlets/traitlets.py) (6 samples, 0.17%)</title><rect x="36" y="324" width="2" height="15" fill="rgb(229,71,9)"/><text x="39.00" y="334.50"></text></g><g><title>_validate (traitlets/traitlets.py) (6 samples, 0.17%)</title><rect x="36" y="340" width="2" height="15" fill="rgb(249,184,12)"/><text x="39.00" y="350.50"></text></g><g><title>__enter__ (contextlib.py) (16 samples, 0.46%)</title><rect x="33" y="244" width="6" height="15" fill="rgb(229,27,41)"/><text x="36.00" y="254.50"></text></g><g><title>temp_flags (ipyparallel/client/view.py) (16 samples, 0.46%)</title><rect x="33" y="260" width="6" height="15" fill="rgb(244,8,41)"/><text x="36.00" y="270.50"></text></g><g><title>set_flags (ipyparallel/client/view.py) (10 samples, 0.29%)</title><rect x="35" y="276" width="4" height="15" fill="rgb(217,191,31)"/><text x="38.00" y="286.50"></text></g><g><title>set_flags (ipyparallel/client/view.py) (8 samples, 0.23%)</title><rect x="36" y="292" width="3" height="15" fill="rgb(242,23,24)"/><text x="39.00" y="302.50"></text></g><g><title>__set__ (traitlets/traitlets.py) (7 samples, 0.20%)</title><rect x="40" y="292" width="3" height="15" fill="rgb(228,175,28)"/><text x="43.00" y="302.50"></text></g><g><title>set (traitlets/traitlets.py) (7 samples, 0.20%)</title><rect x="40" y="308" width="3" height="15" fill="rgb(217,44,44)"/><text x="43.00" y="318.50"></text></g><g><title>_validate (traitlets/traitlets.py) (5 samples, 0.15%)</title><rect x="41" y="324" width="2" height="15" fill="rgb(241,8,6)"/><text x="44.00" y="334.50"></text></g><g><title>_cross_validate (traitlets/traitlets.py) (3 samples, 0.09%)</title><rect x="48" y="356" width="1" height="15" fill="rgb(233,216,34)"/><text x="51.00" y="366.50"></text></g><g><title>__exit__ (contextlib.py) (32 samples, 0.93%)</title><rect x="39" y="244" width="11" height="15" fill="rgb(252,110,32)"/><text x="42.00" y="254.50"></text></g><g><title>temp_flags (ipyparallel/client/view.py) (30 samples, 0.87%)</title><rect x="39" y="260" width="11" height="15" fill="rgb(228,156,3)"/><text x="42.00" y="270.50"></text></g><g><title>set_flags (ipyparallel/client/view.py) (29 samples, 0.84%)</title><rect x="40" y="276" width="10" height="15" fill="rgb(214,64,3)"/><text x="43.00" y="286.50"></text></g><g><title>set_flags (ipyparallel/client/view.py) (20 samples, 0.58%)</title><rect x="43" y="292" width="7" height="15" fill="rgb(225,218,0)"/><text x="46.00" y="302.50"></text></g><g><title>__set__ (traitlets/traitlets.py) (14 samples, 0.41%)</title><rect x="45" y="308" width="5" height="15" fill="rgb(233,181,49)"/><text x="48.00" y="318.50"></text></g><g><title>set (traitlets/traitlets.py) (13 samples, 0.38%)</title><rect x="45" y="324" width="5" height="15" fill="rgb(228,177,51)"/><text x="48.00" y="334.50"></text></g><g><title>_validate (traitlets/traitlets.py) (6 samples, 0.17%)</title><rect x="48" y="340" width="2" height="15" fill="rgb(232,140,49)"/><text x="51.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (ipyparallel/client/asyncresult.py) (7 samples, 0.20%)</title><rect x="50" y="276" width="2" height="15" fill="rgb(224,189,37)"/><text x="53.00" y="286.50"></text></g><g><title>__init__ (ipyparallel/client/asyncresult.py) (15 samples, 0.44%)</title><rect x="50" y="244" width="5" height="15" fill="rgb(207,116,5)"/><text x="53.00" y="254.50"></text></g><g><title>__init__ (ipyparallel/client/asyncresult.py) (15 samples, 0.44%)</title><rect x="50" y="260" width="5" height="15" fill="rgb(229,86,27)"/><text x="53.00" y="270.50"></text></g><g><title>_init_futures (ipyparallel/client/asyncresult.py) (8 samples, 0.23%)</title><rect x="52" y="276" width="3" height="15" fill="rgb(212,13,13)"/><text x="55.00" y="286.50"></text></g><g><title>multi_future (ipyparallel/client/futures.py) (8 samples, 0.23%)</title><rect x="52" y="292" width="3" height="15" fill="rgb(210,46,28)"/><text x="55.00" y="302.50"></text></g><g><title>future_add_done_callback (ipyparallel/client/futures.py) (7 samples, 0.20%)</title><rect x="52" y="308" width="3" height="15" fill="rgb(209,133,22)"/><text x="55.00" y="318.50"></text></g><g><title>__get__ (traitlets/traitlets.py) (4 samples, 0.12%)</title><rect x="59" y="340" width="1" height="15" fill="rgb(243,81,15)"/><text x="62.00" y="350.50"></text></g><g><title>__init__ (concurrent/futures/_base.py) (8 samples, 0.23%)</title><rect x="64" y="356" width="3" height="15" fill="rgb(235,58,48)"/><text x="67.00" y="366.50"></text></g><g><title>__init__ (threading.py) (7 samples, 0.20%)</title><rect x="64" y="372" width="3" height="15" fill="rgb(210,79,4)"/><text x="67.00" y="382.50"></text></g><g><title>__init__ (threading.py) (31 samples, 0.90%)</title><rect x="67" y="356" width="10" height="15" fill="rgb(209,158,3)"/><text x="70.00" y="366.50"></text></g><g><title>__init__ (threading.py) (27 samples, 0.78%)</title><rect x="68" y="372" width="9" height="15" fill="rgb(205,2,23)"/><text x="71.00" y="382.50"></text></g><g><title>add_done_callback (concurrent/futures/_base.py) (16 samples, 0.46%)</title><rect x="79" y="372" width="5" height="15" fill="rgb(209,203,41)"/><text x="82.00" y="382.50"></text></g><g><title>_handle_sent (ipyparallel/client/asyncresult.py) (13 samples, 0.38%)</title><rect x="80" y="388" width="4" height="15" fill="rgb(228,77,7)"/><text x="83.00" y="398.50"></text></g><g><title>set (threading.py) (9 samples, 0.26%)</title><rect x="81" y="404" width="3" height="15" fill="rgb(230,30,51)"/><text x="84.00" y="414.50"></text></g><g><title>notify_all (threading.py) (8 samples, 0.23%)</title><rect x="82" y="420" width="2" height="15" fill="rgb(232,193,29)"/><text x="85.00" y="430.50"></text></g><g><title>notify (threading.py) (6 samples, 0.17%)</title><rect x="82" y="436" width="2" height="15" fill="rgb(238,104,46)"/><text x="85.00" y="446.50"></text></g><g><title>__init__ (concurrent/futures/_base.py) (29 samples, 0.84%)</title><rect x="104" y="388" width="10" height="15" fill="rgb(215,92,14)"/><text x="107.00" y="398.50"></text></g><g><title>__init__ (threading.py) (13 samples, 0.38%)</title><rect x="109" y="404" width="5" height="15" fill="rgb(211,211,5)"/><text x="112.00" y="414.50"></text></g><g><title>add_done_callback (concurrent/futures/_base.py) (4 samples, 0.12%)</title><rect x="114" y="404" width="2" height="15" fill="rgb(219,187,3)"/><text x="117.00" y="414.50"></text></g><g><title>cancelled (concurrent/futures/_base.py) (4 samples, 0.12%)</title><rect x="117" y="436" width="1" height="15" fill="rgb(244,165,53)"/><text x="120.00" y="446.50"></text></g><g><title>future_set_result_unless_cancelled (ipyparallel/client/futures.py) (9 samples, 0.26%)</title><rect x="117" y="420" width="3" height="15" fill="rgb(210,205,0)"/><text x="120.00" y="430.50"></text></g><g><title>set_result (concurrent/futures/_base.py) (5 samples, 0.15%)</title><rect x="118" y="436" width="2" height="15" fill="rgb(244,3,26)"/><text x="121.00" y="446.50"></text></g><g><title>callback (ipyparallel/client/futures.py) (15 samples, 0.44%)</title><rect x="116" y="404" width="5" height="15" fill="rgb(221,11,22)"/><text x="119.00" y="414.50"></text></g><g><title>result (concurrent/futures/_base.py) (3 samples, 0.09%)</title><rect x="120" y="420" width="1" height="15" fill="rgb(218,120,16)"/><text x="123.00" y="430.50"></text></g><g><title>__init__ (ipyparallel/client/asyncresult.py) (192 samples, 5.58%)</title><rect x="60" y="340" width="66" height="15" fill="rgb(224,141,40)"/><text x="63.00" y="350.50">__init_..</text></g><g><title>_init_futures (ipyparallel/client/asyncresult.py) (141 samples, 4.10%)</title><rect x="77" y="356" width="49" height="15" fill="rgb(211,205,28)"/><text x="80.00" y="366.50">_ini..</text></g><g><title>multi_future (ipyparallel/client/futures.py) (121 samples, 3.52%)</title><rect x="84" y="372" width="42" height="15" fill="rgb(236,47,1)"/><text x="87.00" y="382.50">mul..</text></g><g><title>future_add_done_callback (ipyparallel/client/futures.py) (35 samples, 1.02%)</title><rect x="114" y="388" width="12" height="15" fill="rgb(254,222,12)"/><text x="117.00" y="398.50"></text></g><g><title>done (concurrent/futures/_base.py) (14 samples, 0.41%)</title><rect x="121" y="404" width="5" height="15" fill="rgb(245,222,46)"/><text x="124.00" y="414.50"></text></g><g><title>__exit__ (threading.py) (3 samples, 0.09%)</title><rect x="125" y="420" width="1" height="15" fill="rgb(238,190,44)"/><text x="128.00" y="430.50"></text></g><g><title>getname (ipyparallel/client/remotefunction.py) (11 samples, 0.32%)</title><rect x="126" y="340" width="4" height="15" fill="rgb(222,74,50)"/><text x="129.00" y="350.50"></text></g><g><title>__get__ (traitlets/traitlets.py) (7 samples, 0.20%)</title><rect x="166" y="372" width="2" height="15" fill="rgb(225,154,41)"/><text x="169.00" y="382.50"></text></g><g><title>get (traitlets/traitlets.py) (3 samples, 0.09%)</title><rect x="167" y="388" width="1" height="15" fill="rgb(231,189,44)"/><text x="170.00" y="398.50"></text></g><g><title>__init__ (ipyparallel/client/client.py) (13 samples, 0.38%)</title><rect x="168" y="372" width="5" height="15" fill="rgb(210,191,42)"/><text x="171.00" y="382.50"></text></g><g><title>__init__ (concurrent/futures/_base.py) (43 samples, 1.25%)</title><rect x="177" y="388" width="15" height="15" fill="rgb(230,95,5)"/><text x="180.00" y="398.50"></text></g><g><title>__init__ (threading.py) (34 samples, 0.99%)</title><rect x="180" y="404" width="12" height="15" fill="rgb(207,121,0)"/><text x="183.00" y="414.50"></text></g><g><title>__init__ (threading.py) (22 samples, 0.64%)</title><rect x="192" y="388" width="7" height="15" fill="rgb(214,157,31)"/><text x="195.00" y="398.50"></text></g><g><title>__init__ (threading.py) (16 samples, 0.46%)</title><rect x="194" y="404" width="5" height="15" fill="rgb(217,98,32)"/><text x="197.00" y="414.50"></text></g><g><title>add_done_callback (concurrent/futures/_base.py) (6 samples, 0.17%)</title><rect x="199" y="388" width="3" height="15" fill="rgb(244,29,47)"/><text x="202.00" y="398.50"></text></g><g><title>__init__ (ipyparallel/client/futures.py) (99 samples, 2.88%)</title><rect x="173" y="372" width="34" height="15" fill="rgb(236,55,41)"/><text x="176.00" y="382.50">__..</text></g><g><title>set_result (concurrent/futures/_base.py) (15 samples, 0.44%)</title><rect x="202" y="388" width="5" height="15" fill="rgb(233,171,54)"/><text x="205.00" y="398.50"></text></g><g><title>notify_all (threading.py) (7 samples, 0.20%)</title><rect x="204" y="404" width="3" height="15" fill="rgb(211,182,46)"/><text x="207.00" y="414.50"></text></g><g><title>notify (threading.py) (3 samples, 0.09%)</title><rect x="206" y="420" width="1" height="15" fill="rgb(214,114,32)"/><text x="209.00" y="430.50"></text></g><g><title>_call_soon (asyncio/base_events.py) (5 samples, 0.15%)</title><rect x="208" y="404" width="2" height="15" fill="rgb(205,172,17)"/><text x="211.00" y="414.50"></text></g><g><title>__init__ (asyncio/events.py) (4 samples, 0.12%)</title><rect x="208" y="420" width="2" height="15" fill="rgb(227,47,31)"/><text x="211.00" y="430.50"></text></g><g><title>add_callback (tornado/platform/asyncio.py) (122 samples, 3.55%)</title><rect x="207" y="372" width="42" height="15" fill="rgb(220,172,16)"/><text x="210.00" y="382.50">add..</text></g><g><title>call_soon_threadsafe (asyncio/base_events.py) (119 samples, 3.46%)</title><rect x="208" y="388" width="41" height="15" fill="rgb(225,30,37)"/><text x="211.00" y="398.50">cal..</text></g><g><title>_write_to_self (asyncio/selector_events.py) (113 samples, 3.28%)</title><rect x="210" y="404" width="39" height="15" fill="rgb(246,100,3)"/><text x="213.00" y="414.50">_wr..</text></g><g><title>__get__ (traitlets/traitlets.py) (3 samples, 0.09%)</title><rect x="252" y="404" width="1" height="15" fill="rgb(230,143,48)"/><text x="255.00" y="414.50"></text></g><g><title>msg_header (jupyter_client/session.py) (11 samples, 0.32%)</title><rect x="253" y="404" width="4" height="15" fill="rgb(240,37,50)"/><text x="256.00" y="414.50"></text></g><g><title>utcnow (jupyter_client/session.py) (7 samples, 0.20%)</title><rect x="254" y="420" width="3" height="15" fill="rgb(241,148,26)"/><text x="257.00" y="430.50"></text></g><g><title>msg (jupyter_client/session.py) (204 samples, 5.93%)</title><rect x="249" y="372" width="69" height="15" fill="rgb(252,221,39)"/><text x="252.00" y="382.50">msg (ju..</text></g><g><title>msg_header (jupyter_client/session.py) (198 samples, 5.75%)</title><rect x="251" y="388" width="67" height="15" fill="rgb(218,97,36)"/><text x="254.00" y="398.50">msg_hea..</text></g><g><title>msg_id (jupyter_client/session.py) (180 samples, 5.23%)</title><rect x="257" y="404" width="61" height="15" fill="rgb(221,101,25)"/><text x="260.00" y="414.50">msg_id..</text></g><g><title>new_id (jupyter_client/session.py) (178 samples, 5.17%)</title><rect x="257" y="420" width="61" height="15" fill="rgb(230,10,33)"/><text x="260.00" y="430.50">new_id..</text></g><g><title>&lt;genexpr&gt; (jupyter_client/session.py) (3 samples, 0.09%)</title><rect x="317" y="436" width="1" height="15" fill="rgb(243,9,35)"/><text x="320.00" y="446.50"></text></g><g><title>__init__ (concurrent/futures/_base.py) (8 samples, 0.23%)</title><rect x="322" y="388" width="3" height="15" fill="rgb(217,87,27)"/><text x="325.00" y="398.50"></text></g><g><title>__init__ (threading.py) (6 samples, 0.17%)</title><rect x="323" y="404" width="2" height="15" fill="rgb(226,69,9)"/><text x="326.00" y="414.50"></text></g><g><title>multi_future (ipyparallel/client/futures.py) (25 samples, 0.73%)</title><rect x="318" y="372" width="9" height="15" fill="rgb(248,147,37)"/><text x="321.00" y="382.50"></text></g><g><title>future_add_done_callback (ipyparallel/client/futures.py) (7 samples, 0.20%)</title><rect x="325" y="388" width="2" height="15" fill="rgb(220,210,26)"/><text x="328.00" y="398.50"></text></g><g><title>done (concurrent/futures/_base.py) (4 samples, 0.12%)</title><rect x="326" y="404" width="1" height="15" fill="rgb(230,113,10)"/><text x="329.00" y="414.50"></text></g><g><title>_send (ipyparallel/client/client.py) (568 samples, 16.51%)</title><rect x="133" y="356" width="195" height="15" fill="rgb(216,176,30)"/><text x="136.00" y="366.50">_send (ipyparallel/client..</text></g><g><title>apply (ipyparallel/client/view.py) (809 samples, 23.51%)</title><rect x="55" y="244" width="277" height="15" fill="rgb(226,112,47)"/><text x="58.00" y="254.50">apply (ipyparallel/client/view.py)</text></g><g><title>_really_apply (decorator.py:decorator-gen-138&gt;) (809 samples, 23.51%)</title><rect x="55" y="260" width="277" height="15" fill="rgb(214,181,18)"/><text x="58.00" y="270.50">_really_apply (decorator.py:decorator..</text></g><g><title>sync_results (ipyparallel/client/view.py) (809 samples, 23.51%)</title><rect x="55" y="276" width="277" height="15" fill="rgb(217,42,4)"/><text x="58.00" y="286.50">sync_results (ipyparallel/client/view..</text></g><g><title>_really_apply (decorator.py:decorator-gen-137&gt;) (808 samples, 23.48%)</title><rect x="55" y="292" width="277" height="15" fill="rgb(243,206,43)"/><text x="58.00" y="302.50">_really_apply (decorator.py:decorator..</text></g><g><title>save_ids (ipyparallel/client/view.py) (808 samples, 23.48%)</title><rect x="55" y="308" width="277" height="15" fill="rgb(219,37,47)"/><text x="58.00" y="318.50">save_ids (ipyparallel/client/view.py)</text></g><g><title>_really_apply (ipyparallel/client/view.py) (804 samples, 23.37%)</title><rect x="56" y="324" width="276" height="15" fill="rgb(234,55,0)"/><text x="59.00" y="334.50">_really_apply (ipyparallel/client/vi..</text></g><g><title>send_apply_request (ipyparallel/client/client.py) (590 samples, 17.15%)</title><rect x="130" y="340" width="202" height="15" fill="rgb(248,184,4)"/><text x="133.00" y="350.50">send_apply_request (ipypar..</text></g><g><title>pack_apply_message (ipyparallel/serialize/serialize.py) (13 samples, 0.38%)</title><rect x="328" y="356" width="4" height="15" fill="rgb(215,207,31)"/><text x="331.00" y="366.50"></text></g><g><title>&lt;module&gt; (profiling/profiling_code.py) (947 samples, 27.52%)</title><rect x="10" y="52" width="324" height="15" fill="rgb(233,209,28)"/><text x="13.00" y="62.50">&lt;module&gt; (profiling/profiling_code.py)</text></g><g><title>run_profiling (profiling/profiling_code.py) (900 samples, 26.16%)</title><rect x="26" y="68" width="308" height="15" fill="rgb(207,94,50)"/><text x="29.00" y="78.50">run_profiling (profiling/profiling_code.p..</text></g><g><title>profile_many_empty_tasks (profiling/profiling_code.py) (900 samples, 26.16%)</title><rect x="26" y="84" width="308" height="15" fill="rgb(213,222,47)"/><text x="29.00" y="94.50">profile_many_empty_tasks (profiling/profi..</text></g><g><title>map (decorator.py:decorator-gen-140&gt;) (900 samples, 26.16%)</title><rect x="26" y="100" width="308" height="15" fill="rgb(212,104,24)"/><text x="29.00" y="110.50">map (decorator.py:decorator-gen-140&gt;)</text></g><g><title>sync_results (ipyparallel/client/view.py) (900 samples, 26.16%)</title><rect x="26" y="116" width="308" height="15" fill="rgb(238,97,43)"/><text x="29.00" y="126.50">sync_results (ipyparallel/client/view.py)</text></g><g><title>map (decorator.py:decorator-gen-139&gt;) (899 samples, 26.13%)</title><rect x="26" y="132" width="308" height="15" fill="rgb(228,68,2)"/><text x="29.00" y="142.50">map (decorator.py:decorator-gen-139&gt;)</text></g><g><title>save_ids (ipyparallel/client/view.py) (899 samples, 26.13%)</title><rect x="26" y="148" width="308" height="15" fill="rgb(242,105,18)"/><text x="29.00" y="158.50">save_ids (ipyparallel/client/view.py)</text></g><g><title>map (ipyparallel/client/view.py) (898 samples, 26.10%)</title><rect x="26" y="164" width="308" height="15" fill="rgb(212,77,54)"/><text x="29.00" y="174.50">map (ipyparallel/client/view.py)</text></g><g><title>map (ipyparallel/client/remotefunction.py) (898 samples, 26.10%)</title><rect x="26" y="180" width="308" height="15" fill="rgb(233,146,50)"/><text x="29.00" y="190.50">map (ipyparallel/client/remotefunction.py)</text></g><g><title>__call__ (decorator.py:decorator-gen-122&gt;) (898 samples, 26.10%)</title><rect x="26" y="196" width="308" height="15" fill="rgb(221,155,43)"/><text x="29.00" y="206.50">__call__ (decorator.py:decorator-gen-122&gt;)</text></g><g><title>sync_view_results (ipyparallel/client/remotefunction.py) (898 samples, 26.10%)</title><rect x="26" y="212" width="308" height="15" fill="rgb(233,156,13)"/><text x="29.00" y="222.50">sync_view_results (ipyparallel/client/rem..</text></g><g><title>__call__ (ipyparallel/client/remotefunction.py) (898 samples, 26.10%)</title><rect x="26" y="228" width="308" height="15" fill="rgb(206,57,30)"/><text x="29.00" y="238.50">__call__ (ipyparallel/client/remotefuncti..</text></g><g><title>helper (contextlib.py) (5 samples, 0.15%)</title><rect x="333" y="244" width="1" height="15" fill="rgb(244,152,24)"/><text x="336.00" y="254.50"></text></g><g><title>__init__ (contextlib.py) (3 samples, 0.09%)</title><rect x="333" y="260" width="1" height="15" fill="rgb(209,29,51)"/><text x="336.00" y="270.50"></text></g><g><title>_process_events (asyncio/selector_events.py) (10 samples, 0.29%)</title><rect x="342" y="164" width="4" height="15" fill="rgb(241,91,2)"/><text x="345.00" y="174.50"></text></g><g><title>_add_callback (asyncio/base_events.py) (5 samples, 0.15%)</title><rect x="344" y="180" width="2" height="15" fill="rgb(217,26,42)"/><text x="347.00" y="190.50"></text></g><g><title>__getattr__ (zmq/sugar/attrsettr.py) (16 samples, 0.46%)</title><rect x="350" y="212" width="5" height="15" fill="rgb(241,221,3)"/><text x="353.00" y="222.50"></text></g><g><title>_get_attr_opt (zmq/sugar/attrsettr.py) (15 samples, 0.44%)</title><rect x="350" y="228" width="5" height="15" fill="rgb(223,216,44)"/><text x="353.00" y="238.50"></text></g><g><title>&lt;lambda&gt; (jupyter_client/session.py) (13 samples, 0.38%)</title><rect x="360" y="292" width="4" height="15" fill="rgb(225,194,41)"/><text x="363.00" y="302.50"></text></g><g><title>loads (zmq/utils/jsonapi.py) (12 samples, 0.35%)</title><rect x="360" y="308" width="4" height="15" fill="rgb(254,160,15)"/><text x="363.00" y="318.50"></text></g><g><title>loads (simplejson/__init__.py) (10 samples, 0.29%)</title><rect x="361" y="324" width="3" height="15" fill="rgb(234,71,18)"/><text x="364.00" y="334.50"></text></g><g><title>decode (simplejson/decoder.py) (7 samples, 0.20%)</title><rect x="362" y="340" width="2" height="15" fill="rgb(221,162,3)"/><text x="365.00" y="350.50"></text></g><g><title>raw_decode (simplejson/decoder.py) (6 samples, 0.17%)</title><rect x="362" y="356" width="2" height="15" fill="rgb(212,109,31)"/><text x="365.00" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.09%)</title><rect x="365" y="308" width="1" height="15" fill="rgb(249,107,5)"/><text x="368.00" y="318.50"></text></g><g><title>adapt (jupyter_client/adapter.py) (7 samples, 0.20%)</title><rect x="364" y="292" width="3" height="15" fill="rgb(211,110,1)"/><text x="367.00" y="302.50"></text></g><g><title>__len__ (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="375" y="372" width="1" height="15" fill="rgb(210,19,33)"/><text x="378.00" y="382.50"></text></g><g><title>_build_naive (dateutil/parser/_parser.py) (6 samples, 0.17%)</title><rect x="376" y="372" width="2" height="15" fill="rgb(209,224,36)"/><text x="379.00" y="382.50"></text></g><g><title>_build_tzaware (dateutil/parser/_parser.py) (8 samples, 0.23%)</title><rect x="378" y="372" width="3" height="15" fill="rgb(221,48,46)"/><text x="381.00" y="382.50"></text></g><g><title>__init__ (dateutil/parser/_parser.py) (7 samples, 0.20%)</title><rect x="387" y="388" width="2" height="15" fill="rgb(252,217,14)"/><text x="390.00" y="398.50"></text></g><g><title>_could_be_tzname (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="389" y="388" width="1" height="15" fill="rgb(238,28,0)"/><text x="392.00" y="398.50"></text></g><g><title>_find_hms_idx (dateutil/parser/_parser.py) (5 samples, 0.15%)</title><rect x="393" y="404" width="2" height="15" fill="rgb(208,75,11)"/><text x="396.00" y="414.50"></text></g><g><title>hms (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="394" y="420" width="1" height="15" fill="rgb(215,54,24)"/><text x="397.00" y="430.50"></text></g><g><title>_parse_min_sec (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="395" y="404" width="1" height="15" fill="rgb(223,174,39)"/><text x="398.00" y="414.50"></text></g><g><title>_parse_numeric_token (dateutil/parser/_parser.py) (23 samples, 0.67%)</title><rect x="390" y="388" width="8" height="15" fill="rgb(228,172,22)"/><text x="393.00" y="398.50"></text></g><g><title>append (dateutil/parser/_parser.py) (5 samples, 0.15%)</title><rect x="397" y="404" width="1" height="15" fill="rgb(224,152,25)"/><text x="400.00" y="414.50"></text></g><g><title>resolve_ymd (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="400" y="388" width="1" height="15" fill="rgb(251,57,31)"/><text x="403.00" y="398.50"></text></g><g><title>split (dateutil/parser/_parser.py) (34 samples, 0.99%)</title><rect x="401" y="388" width="12" height="15" fill="rgb(222,16,11)"/><text x="404.00" y="398.50"></text></g><g><title>__next__ (dateutil/parser/_parser.py) (29 samples, 0.84%)</title><rect x="403" y="404" width="10" height="15" fill="rgb(216,87,0)"/><text x="406.00" y="414.50"></text></g><g><title>get_token (dateutil/parser/_parser.py) (28 samples, 0.81%)</title><rect x="403" y="420" width="10" height="15" fill="rgb(208,5,36)"/><text x="406.00" y="430.50"></text></g><g><title>extract_dates (jupyter_client/jsonutil.py) (135 samples, 3.92%)</title><rect x="367" y="292" width="46" height="15" fill="rgb(227,40,20)"/><text x="370.00" y="302.50">extr..</text></g><g><title>extract_dates (jupyter_client/jsonutil.py) (132 samples, 3.84%)</title><rect x="368" y="308" width="45" height="15" fill="rgb(220,167,53)"/><text x="371.00" y="318.50">extr..</text></g><g><title>parse_date (jupyter_client/jsonutil.py) (132 samples, 3.84%)</title><rect x="368" y="324" width="45" height="15" fill="rgb(215,79,54)"/><text x="371.00" y="334.50">pars..</text></g><g><title>parse (dateutil/parser/_parser.py) (122 samples, 3.55%)</title><rect x="371" y="340" width="42" height="15" fill="rgb(236,219,13)"/><text x="374.00" y="350.50">par..</text></g><g><title>parse (dateutil/parser/_parser.py) (121 samples, 3.52%)</title><rect x="372" y="356" width="41" height="15" fill="rgb(238,61,41)"/><text x="375.00" y="366.50">par..</text></g><g><title>_parse (dateutil/parser/_parser.py) (94 samples, 2.73%)</title><rect x="381" y="372" width="32" height="15" fill="rgb(250,103,37)"/><text x="384.00" y="382.50">_p..</text></g><g><title>deserialize (jupyter_client/session.py) (172 samples, 5.00%)</title><rect x="357" y="276" width="59" height="15" fill="rgb(231,81,7)"/><text x="360.00" y="286.50">deseri..</text></g><g><title>sign (jupyter_client/session.py) (8 samples, 0.23%)</title><rect x="413" y="292" width="3" height="15" fill="rgb(244,81,16)"/><text x="416.00" y="302.50"></text></g><g><title>update (hmac.py) (4 samples, 0.12%)</title><rect x="414" y="308" width="2" height="15" fill="rgb(219,211,51)"/><text x="417.00" y="318.50"></text></g><g><title>_dispatch_iopub (decorator.py:decorator-gen-145&gt;) (177 samples, 5.14%)</title><rect x="356" y="244" width="60" height="15" fill="rgb(254,170,2)"/><text x="359.00" y="254.50">_dispa..</text></g><g><title>unpack_message (ipyparallel/client/client.py) (177 samples, 5.14%)</title><rect x="356" y="260" width="60" height="15" fill="rgb(249,62,3)"/><text x="359.00" y="270.50">unpack..</text></g><g><title>_build_naive (dateutil/parser/_parser.py) (5 samples, 0.15%)</title><rect x="426" y="372" width="2" height="15" fill="rgb(235,202,13)"/><text x="429.00" y="382.50"></text></g><g><title>__init__ (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="433" y="388" width="1" height="15" fill="rgb(230,160,24)"/><text x="436.00" y="398.50"></text></g><g><title>_parse_numeric_token (dateutil/parser/_parser.py) (12 samples, 0.35%)</title><rect x="434" y="388" width="4" height="15" fill="rgb(232,142,8)"/><text x="437.00" y="398.50"></text></g><g><title>month (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="437" y="404" width="1" height="15" fill="rgb(211,130,9)"/><text x="440.00" y="414.50"></text></g><g><title>resolve_ymd (dateutil/parser/_parser.py) (7 samples, 0.20%)</title><rect x="439" y="388" width="2" height="15" fill="rgb(205,5,8)"/><text x="442.00" y="398.50"></text></g><g><title>_parse_date (ipyparallel/util.py) (80 samples, 2.32%)</title><rect x="423" y="324" width="27" height="15" fill="rgb(233,44,33)"/><text x="426.00" y="334.50">_..</text></g><g><title>parse (dateutil/parser/_parser.py) (77 samples, 2.24%)</title><rect x="424" y="340" width="26" height="15" fill="rgb(228,139,31)"/><text x="427.00" y="350.50">p..</text></g><g><title>parse (dateutil/parser/_parser.py) (76 samples, 2.21%)</title><rect x="424" y="356" width="26" height="15" fill="rgb(242,95,33)"/><text x="427.00" y="366.50">p..</text></g><g><title>_parse (dateutil/parser/_parser.py) (64 samples, 1.86%)</title><rect x="429" y="372" width="21" height="15" fill="rgb(228,5,16)"/><text x="432.00" y="382.50"></text></g><g><title>split (dateutil/parser/_parser.py) (27 samples, 0.78%)</title><rect x="441" y="388" width="9" height="15" fill="rgb(212,45,11)"/><text x="444.00" y="398.50"></text></g><g><title>__next__ (dateutil/parser/_parser.py) (22 samples, 0.64%)</title><rect x="443" y="404" width="7" height="15" fill="rgb(223,16,52)"/><text x="446.00" y="414.50"></text></g><g><title>get_token (dateutil/parser/_parser.py) (20 samples, 0.58%)</title><rect x="444" y="420" width="6" height="15" fill="rgb(211,109,23)"/><text x="447.00" y="430.50"></text></g><g><title>_extract_metadata (ipyparallel/client/client.py) (86 samples, 2.50%)</title><rect x="422" y="308" width="29" height="15" fill="rgb(216,29,49)"/><text x="425.00" y="318.50">_e..</text></g><g><title>done (concurrent/futures/_base.py) (4 samples, 0.12%)</title><rect x="454" y="356" width="1" height="15" fill="rgb(209,5,47)"/><text x="457.00" y="366.50"></text></g><g><title>cancelled (concurrent/futures/_base.py) (4 samples, 0.12%)</title><rect x="456" y="372" width="1" height="15" fill="rgb(224,157,54)"/><text x="459.00" y="382.50"></text></g><g><title>_resolve_result (ipyparallel/client/asyncresult.py) (6 samples, 0.17%)</title><rect x="459" y="404" width="2" height="15" fill="rgb(205,211,5)"/><text x="462.00" y="414.50"></text></g><g><title>set_result (concurrent/futures/_base.py) (4 samples, 0.12%)</title><rect x="460" y="420" width="1" height="15" fill="rgb(252,94,5)"/><text x="463.00" y="430.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py) (3 samples, 0.09%)</title><rect x="460" y="436" width="1" height="15" fill="rgb(245,146,21)"/><text x="463.00" y="446.50"></text></g><g><title>_finalize_result (ipyparallel/client/asyncresult.py) (3 samples, 0.09%)</title><rect x="460" y="452" width="1" height="15" fill="rgb(217,59,41)"/><text x="463.00" y="462.50"></text></g><g><title>set (threading.py) (3 samples, 0.09%)</title><rect x="460" y="468" width="1" height="15" fill="rgb(253,182,43)"/><text x="463.00" y="478.50"></text></g><g><title>future_set_result_unless_cancelled (ipyparallel/client/futures.py) (6 samples, 0.17%)</title><rect x="461" y="420" width="3" height="15" fill="rgb(214,52,26)"/><text x="464.00" y="430.50"></text></g><g><title>set_result (concurrent/futures/_base.py) (5 samples, 0.15%)</title><rect x="462" y="436" width="2" height="15" fill="rgb(248,220,25)"/><text x="465.00" y="446.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py) (5 samples, 0.15%)</title><rect x="462" y="452" width="2" height="15" fill="rgb(215,60,26)"/><text x="465.00" y="462.50"></text></g><g><title>_resolve_output (ipyparallel/client/asyncresult.py) (4 samples, 0.12%)</title><rect x="462" y="468" width="2" height="15" fill="rgb(223,6,14)"/><text x="465.00" y="478.50"></text></g><g><title>callback (ipyparallel/client/futures.py) (7 samples, 0.20%)</title><rect x="461" y="404" width="3" height="15" fill="rgb(225,152,50)"/><text x="464.00" y="414.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py) (17 samples, 0.49%)</title><rect x="459" y="388" width="6" height="15" fill="rgb(225,148,52)"/><text x="462.00" y="398.50"></text></g><g><title>cleanup (ipyparallel/client/client.py) (4 samples, 0.12%)</title><rect x="464" y="404" width="1" height="15" fill="rgb(215,222,21)"/><text x="467.00" y="414.50"></text></g><g><title>__get__ (traitlets/traitlets.py) (4 samples, 0.12%)</title><rect x="464" y="420" width="1" height="15" fill="rgb(228,78,16)"/><text x="467.00" y="430.50"></text></g><g><title>future_set_result_unless_cancelled (ipyparallel/client/futures.py) (30 samples, 0.87%)</title><rect x="455" y="356" width="11" height="15" fill="rgb(228,225,47)"/><text x="458.00" y="366.50"></text></g><g><title>set_result (concurrent/futures/_base.py) (24 samples, 0.70%)</title><rect x="457" y="372" width="9" height="15" fill="rgb(211,216,48)"/><text x="460.00" y="382.50"></text></g><g><title>_dispatch_reply (ipyparallel/client/client.py) (140 samples, 4.07%)</title><rect x="418" y="276" width="48" height="15" fill="rgb(246,154,28)"/><text x="421.00" y="286.50">_dis..</text></g><g><title>_handle_apply_reply (ipyparallel/client/client.py) (139 samples, 4.04%)</title><rect x="418" y="292" width="48" height="15" fill="rgb(239,219,48)"/><text x="421.00" y="302.50">_han..</text></g><g><title>set_result (concurrent/futures/_base.py) (42 samples, 1.22%)</title><rect x="452" y="308" width="14" height="15" fill="rgb(211,162,32)"/><text x="455.00" y="318.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py) (41 samples, 1.19%)</title><rect x="452" y="324" width="14" height="15" fill="rgb(218,18,2)"/><text x="455.00" y="334.50"></text></g><g><title>callback (ipyparallel/client/futures.py) (39 samples, 1.13%)</title><rect x="453" y="340" width="13" height="15" fill="rgb(232,207,54)"/><text x="456.00" y="350.50"></text></g><g><title>&lt;lambda&gt; (jupyter_client/session.py) (20 samples, 0.58%)</title><rect x="468" y="292" width="7" height="15" fill="rgb(221,7,44)"/><text x="471.00" y="302.50"></text></g><g><title>loads (zmq/utils/jsonapi.py) (19 samples, 0.55%)</title><rect x="469" y="308" width="6" height="15" fill="rgb(216,206,48)"/><text x="472.00" y="318.50"></text></g><g><title>loads (simplejson/__init__.py) (18 samples, 0.52%)</title><rect x="469" y="324" width="6" height="15" fill="rgb(221,168,43)"/><text x="472.00" y="334.50"></text></g><g><title>decode (simplejson/decoder.py) (13 samples, 0.38%)</title><rect x="471" y="340" width="4" height="15" fill="rgb(245,205,31)"/><text x="474.00" y="350.50"></text></g><g><title>raw_decode (simplejson/decoder.py) (11 samples, 0.32%)</title><rect x="471" y="356" width="4" height="15" fill="rgb(230,223,6)"/><text x="474.00" y="366.50"></text></g><g><title>__get__ (traitlets/traitlets.py) (5 samples, 0.15%)</title><rect x="476" y="292" width="1" height="15" fill="rgb(208,117,6)"/><text x="479.00" y="302.50"></text></g><g><title>get (traitlets/traitlets.py) (4 samples, 0.12%)</title><rect x="476" y="308" width="1" height="15" fill="rgb(229,218,46)"/><text x="479.00" y="318.50"></text></g><g><title>adapt (jupyter_client/adapter.py) (6 samples, 0.17%)</title><rect x="478" y="292" width="2" height="15" fill="rgb(210,221,8)"/><text x="481.00" y="302.50"></text></g><g><title>_build_naive (dateutil/parser/_parser.py) (6 samples, 0.17%)</title><rect x="491" y="372" width="2" height="15" fill="rgb(210,30,32)"/><text x="494.00" y="382.50"></text></g><g><title>_build_tzaware (dateutil/parser/_parser.py) (8 samples, 0.23%)</title><rect x="493" y="372" width="2" height="15" fill="rgb(229,207,40)"/><text x="496.00" y="382.50"></text></g><g><title>__init__ (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="500" y="388" width="1" height="15" fill="rgb(205,57,16)"/><text x="503.00" y="398.50"></text></g><g><title>_find_hms_idx (dateutil/parser/_parser.py) (6 samples, 0.17%)</title><rect x="505" y="404" width="2" height="15" fill="rgb(229,208,19)"/><text x="508.00" y="414.50"></text></g><g><title>hms (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="506" y="420" width="1" height="15" fill="rgb(219,153,54)"/><text x="509.00" y="430.50"></text></g><g><title>_parsems (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="507" y="404" width="1" height="15" fill="rgb(223,179,12)"/><text x="510.00" y="414.50"></text></g><g><title>_parse_numeric_token (dateutil/parser/_parser.py) (32 samples, 0.93%)</title><rect x="501" y="388" width="11" height="15" fill="rgb(218,30,29)"/><text x="504.00" y="398.50"></text></g><g><title>append (dateutil/parser/_parser.py) (10 samples, 0.29%)</title><rect x="509" y="404" width="3" height="15" fill="rgb(211,109,42)"/><text x="512.00" y="414.50"></text></g><g><title>resolve_ymd (dateutil/parser/_parser.py) (7 samples, 0.20%)</title><rect x="513" y="388" width="2" height="15" fill="rgb(228,117,36)"/><text x="516.00" y="398.50"></text></g><g><title>split (dateutil/parser/_parser.py) (60 samples, 1.74%)</title><rect x="515" y="388" width="21" height="15" fill="rgb(231,157,32)"/><text x="518.00" y="398.50"></text></g><g><title>__next__ (dateutil/parser/_parser.py) (56 samples, 1.63%)</title><rect x="517" y="404" width="19" height="15" fill="rgb(232,161,28)"/><text x="520.00" y="414.50"></text></g><g><title>get_token (dateutil/parser/_parser.py) (51 samples, 1.48%)</title><rect x="518" y="420" width="18" height="15" fill="rgb(212,217,36)"/><text x="521.00" y="430.50"></text></g><g><title>extract_dates (jupyter_client/jsonutil.py) (165 samples, 4.80%)</title><rect x="480" y="292" width="56" height="15" fill="rgb(212,104,5)"/><text x="483.00" y="302.50">extra..</text></g><g><title>extract_dates (jupyter_client/jsonutil.py) (163 samples, 4.74%)</title><rect x="480" y="308" width="56" height="15" fill="rgb(231,133,5)"/><text x="483.00" y="318.50">extra..</text></g><g><title>parse_date (jupyter_client/jsonutil.py) (159 samples, 4.62%)</title><rect x="482" y="324" width="54" height="15" fill="rgb(251,90,28)"/><text x="485.00" y="334.50">parse..</text></g><g><title>parse (dateutil/parser/_parser.py) (150 samples, 4.36%)</title><rect x="485" y="340" width="51" height="15" fill="rgb(213,76,27)"/><text x="488.00" y="350.50">parse..</text></g><g><title>parse (dateutil/parser/_parser.py) (150 samples, 4.36%)</title><rect x="485" y="356" width="51" height="15" fill="rgb(253,96,38)"/><text x="488.00" y="366.50">parse..</text></g><g><title>_parse (dateutil/parser/_parser.py) (119 samples, 3.46%)</title><rect x="495" y="372" width="41" height="15" fill="rgb(208,162,45)"/><text x="498.00" y="382.50">_pa..</text></g><g><title>copy (hmac.py) (3 samples, 0.09%)</title><rect x="537" y="308" width="1" height="15" fill="rgb(241,185,4)"/><text x="540.00" y="318.50"></text></g><g><title>hexdigest (hmac.py) (5 samples, 0.15%)</title><rect x="539" y="308" width="2" height="15" fill="rgb(249,203,24)"/><text x="542.00" y="318.50"></text></g><g><title>_current (hmac.py) (4 samples, 0.12%)</title><rect x="539" y="324" width="2" height="15" fill="rgb(222,158,1)"/><text x="542.00" y="334.50"></text></g><g><title>deserialize (jupyter_client/session.py) (220 samples, 6.39%)</title><rect x="466" y="276" width="75" height="15" fill="rgb(253,104,42)"/><text x="469.00" y="286.50">deserial..</text></g><g><title>sign (jupyter_client/session.py) (15 samples, 0.44%)</title><rect x="536" y="292" width="5" height="15" fill="rgb(209,206,29)"/><text x="539.00" y="302.50"></text></g><g><title>_run_callback (zmq/eventloop/zmqstream.py) (544 samples, 15.81%)</title><rect x="356" y="228" width="186" height="15" fill="rgb(222,149,10)"/><text x="359.00" y="238.50">_run_callback (zmq/event..</text></g><g><title>_dispatch_reply (decorator.py:decorator-gen-144&gt;) (367 samples, 10.67%)</title><rect x="416" y="244" width="126" height="15" fill="rgb(229,68,15)"/><text x="419.00" y="254.50">_dispatch_reply..</text></g><g><title>unpack_message (ipyparallel/client/client.py) (363 samples, 10.55%)</title><rect x="418" y="260" width="124" height="15" fill="rgb(254,125,6)"/><text x="421.00" y="270.50">unpack_message ..</text></g><g><title>_handle_recv (zmq/eventloop/zmqstream.py) (576 samples, 16.74%)</title><rect x="355" y="212" width="198" height="15" fill="rgb(218,89,15)"/><text x="358.00" y="222.50">_handle_recv (zmq/eventlo..</text></g><g><title>recv_multipart (zmq/sugar/socket.py) (31 samples, 0.90%)</title><rect x="542" y="228" width="11" height="15" fill="rgb(231,50,12)"/><text x="545.00" y="238.50"></text></g><g><title>__getattr__ (zmq/sugar/attrsettr.py) (13 samples, 0.38%)</title><rect x="555" y="244" width="5" height="15" fill="rgb(210,18,13)"/><text x="558.00" y="254.50"></text></g><g><title>_get_attr_opt (zmq/sugar/attrsettr.py) (11 samples, 0.32%)</title><rect x="556" y="260" width="4" height="15" fill="rgb(245,201,0)"/><text x="559.00" y="270.50"></text></g><g><title>_update_handler (zmq/eventloop/zmqstream.py) (22 samples, 0.64%)</title><rect x="553" y="228" width="7" height="15" fill="rgb(245,143,13)"/><text x="556.00" y="238.50"></text></g><g><title>_rebuild_io_state (zmq/eventloop/zmqstream.py) (25 samples, 0.73%)</title><rect x="553" y="212" width="8" height="15" fill="rgb(248,214,39)"/><text x="556.00" y="222.50"></text></g><g><title>_handle_events (tornado/platform/asyncio.py) (624 samples, 18.13%)</title><rect x="348" y="180" width="214" height="15" fill="rgb(241,174,25)"/><text x="351.00" y="190.50">_handle_events (tornado/plat..</text></g><g><title>_handle_events (zmq/eventloop/zmqstream.py) (624 samples, 18.13%)</title><rect x="348" y="196" width="214" height="15" fill="rgb(250,213,52)"/><text x="351.00" y="206.50">_handle_events (zmq/eventloo..</text></g><g><title>__getattr__ (zmq/sugar/attrsettr.py) (23 samples, 0.67%)</title><rect x="577" y="228" width="8" height="15" fill="rgb(252,196,14)"/><text x="580.00" y="238.50"></text></g><g><title>_get_attr_opt (zmq/sugar/attrsettr.py) (16 samples, 0.46%)</title><rect x="579" y="244" width="6" height="15" fill="rgb(214,137,29)"/><text x="582.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (ipyparallel/client/futures.py) (3 samples, 0.09%)</title><rect x="595" y="340" width="1" height="15" fill="rgb(231,119,26)"/><text x="598.00" y="350.50"></text></g><g><title>set (threading.py) (3 samples, 0.09%)</title><rect x="595" y="356" width="1" height="15" fill="rgb(254,93,54)"/><text x="598.00" y="366.50"></text></g><g><title>future_set_result_unless_cancelled (ipyparallel/client/futures.py) (9 samples, 0.26%)</title><rect x="597" y="356" width="3" height="15" fill="rgb(249,92,6)"/><text x="600.00" y="366.50"></text></g><g><title>set_result (concurrent/futures/_base.py) (6 samples, 0.17%)</title><rect x="598" y="372" width="2" height="15" fill="rgb(214,183,14)"/><text x="601.00" y="382.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py) (3 samples, 0.09%)</title><rect x="599" y="388" width="1" height="15" fill="rgb(231,180,40)"/><text x="602.00" y="398.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py) (23 samples, 0.67%)</title><rect x="594" y="324" width="8" height="15" fill="rgb(221,92,29)"/><text x="597.00" y="334.50"></text></g><g><title>callback (ipyparallel/client/futures.py) (18 samples, 0.52%)</title><rect x="596" y="340" width="6" height="15" fill="rgb(211,190,5)"/><text x="599.00" y="350.50"></text></g><g><title>result (concurrent/futures/_base.py) (5 samples, 0.15%)</title><rect x="600" y="356" width="2" height="15" fill="rgb(213,110,37)"/><text x="603.00" y="366.50"></text></g><g><title>__enter__ (threading.py) (3 samples, 0.09%)</title><rect x="601" y="372" width="1" height="15" fill="rgb(247,221,32)"/><text x="604.00" y="382.50"></text></g><g><title>_dispatch_iopub (ipyparallel/client/client.py) (39 samples, 1.13%)</title><rect x="590" y="292" width="13" height="15" fill="rgb(254,45,42)"/><text x="593.00" y="302.50"></text></g><g><title>set_result (concurrent/futures/_base.py) (29 samples, 0.84%)</title><rect x="593" y="308" width="10" height="15" fill="rgb(224,124,27)"/><text x="596.00" y="318.50"></text></g><g><title>notify_all (threading.py) (3 samples, 0.09%)</title><rect x="602" y="324" width="1" height="15" fill="rgb(240,223,29)"/><text x="605.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (jupyter_client/session.py) (34 samples, 0.99%)</title><rect x="608" y="308" width="12" height="15" fill="rgb(212,205,6)"/><text x="611.00" y="318.50"></text></g><g><title>loads (zmq/utils/jsonapi.py) (31 samples, 0.90%)</title><rect x="609" y="324" width="11" height="15" fill="rgb(226,98,19)"/><text x="612.00" y="334.50"></text></g><g><title>loads (simplejson/__init__.py) (27 samples, 0.78%)</title><rect x="611" y="340" width="9" height="15" fill="rgb(228,163,38)"/><text x="614.00" y="350.50"></text></g><g><title>decode (simplejson/decoder.py) (25 samples, 0.73%)</title><rect x="611" y="356" width="9" height="15" fill="rgb(213,67,11)"/><text x="614.00" y="366.50"></text></g><g><title>raw_decode (simplejson/decoder.py) (22 samples, 0.64%)</title><rect x="612" y="372" width="8" height="15" fill="rgb(212,4,49)"/><text x="615.00" y="382.50"></text></g><g><title>__get__ (traitlets/traitlets.py) (7 samples, 0.20%)</title><rect x="620" y="308" width="2" height="15" fill="rgb(222,50,54)"/><text x="623.00" y="318.50"></text></g><g><title>get (traitlets/traitlets.py) (6 samples, 0.17%)</title><rect x="620" y="324" width="2" height="15" fill="rgb(238,5,27)"/><text x="623.00" y="334.50"></text></g><g><title>_add_digest (jupyter_client/session.py) (4 samples, 0.12%)</title><rect x="622" y="308" width="2" height="15" fill="rgb(228,150,3)"/><text x="625.00" y="318.50"></text></g><g><title>adapt (jupyter_client/adapter.py) (12 samples, 0.35%)</title><rect x="624" y="308" width="4" height="15" fill="rgb(240,149,17)"/><text x="627.00" y="318.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.12%)</title><rect x="626" y="324" width="2" height="15" fill="rgb(247,25,22)"/><text x="629.00" y="334.50"></text></g><g><title>_ensure_tzinfo (jupyter_client/jsonutil.py) (3 samples, 0.09%)</title><rect x="640" y="356" width="2" height="15" fill="rgb(217,13,2)"/><text x="643.00" y="366.50"></text></g><g><title>__len__ (dateutil/parser/_parser.py) (7 samples, 0.20%)</title><rect x="651" y="388" width="3" height="15" fill="rgb(210,195,22)"/><text x="654.00" y="398.50"></text></g><g><title>_build_naive (dateutil/parser/_parser.py) (12 samples, 0.35%)</title><rect x="654" y="388" width="4" height="15" fill="rgb(230,163,22)"/><text x="657.00" y="398.50"></text></g><g><title>_build_tzaware (dateutil/parser/_parser.py) (10 samples, 0.29%)</title><rect x="658" y="388" width="3" height="15" fill="rgb(227,72,47)"/><text x="661.00" y="398.50"></text></g><g><title>__init__ (dateutil/parser/_parser.py) (11 samples, 0.32%)</title><rect x="676" y="404" width="4" height="15" fill="rgb(216,177,14)"/><text x="679.00" y="414.50"></text></g><g><title>_could_be_tzname (dateutil/parser/_parser.py) (6 samples, 0.17%)</title><rect x="680" y="404" width="2" height="15" fill="rgb(207,190,12)"/><text x="683.00" y="414.50"></text></g><g><title>&lt;genexpr&gt; (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="681" y="420" width="1" height="15" fill="rgb(224,113,22)"/><text x="684.00" y="430.50"></text></g><g><title>_find_hms_idx (dateutil/parser/_parser.py) (23 samples, 0.67%)</title><rect x="691" y="420" width="8" height="15" fill="rgb(253,129,43)"/><text x="694.00" y="430.50"></text></g><g><title>hms (dateutil/parser/_parser.py) (7 samples, 0.20%)</title><rect x="697" y="436" width="2" height="15" fill="rgb(240,192,22)"/><text x="700.00" y="446.50"></text></g><g><title>_parsems (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="699" y="420" width="1" height="15" fill="rgb(207,193,16)"/><text x="702.00" y="430.50"></text></g><g><title>_to_decimal (dateutil/parser/_parser.py) (9 samples, 0.26%)</title><rect x="700" y="420" width="4" height="15" fill="rgb(216,203,45)"/><text x="703.00" y="430.50"></text></g><g><title>append (dateutil/parser/_parser.py) (20 samples, 0.58%)</title><rect x="704" y="420" width="6" height="15" fill="rgb(234,87,49)"/><text x="707.00" y="430.50"></text></g><g><title>jump (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="710" y="420" width="1" height="15" fill="rgb(223,39,22)"/><text x="713.00" y="430.50"></text></g><g><title>_parse_numeric_token (dateutil/parser/_parser.py) (90 samples, 2.62%)</title><rect x="682" y="404" width="30" height="15" fill="rgb(228,185,4)"/><text x="685.00" y="414.50">_p..</text></g><g><title>month (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="711" y="420" width="1" height="15" fill="rgb(254,175,32)"/><text x="714.00" y="430.50"></text></g><g><title>ampm (dateutil/parser/_parser.py) (5 samples, 0.15%)</title><rect x="712" y="404" width="2" height="15" fill="rgb(249,12,14)"/><text x="715.00" y="414.50"></text></g><g><title>month (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="714" y="404" width="1" height="15" fill="rgb(232,121,50)"/><text x="717.00" y="414.50"></text></g><g><title>resolve_ymd (dateutil/parser/_parser.py) (8 samples, 0.23%)</title><rect x="715" y="404" width="3" height="15" fill="rgb(245,20,29)"/><text x="718.00" y="414.50"></text></g><g><title>__init__ (dateutil/parser/_parser.py) (8 samples, 0.23%)</title><rect x="722" y="420" width="3" height="15" fill="rgb(208,89,21)"/><text x="725.00" y="430.50"></text></g><g><title>isnum (dateutil/parser/_parser.py) (9 samples, 0.26%)</title><rect x="753" y="452" width="3" height="15" fill="rgb(225,151,2)"/><text x="756.00" y="462.50"></text></g><g><title>isspace (dateutil/parser/_parser.py) (5 samples, 0.15%)</title><rect x="756" y="452" width="1" height="15" fill="rgb(219,95,34)"/><text x="759.00" y="462.50"></text></g><g><title>split (dateutil/parser/_parser.py) (119 samples, 3.46%)</title><rect x="718" y="404" width="41" height="15" fill="rgb(242,86,37)"/><text x="721.00" y="414.50">spl..</text></g><g><title>__next__ (dateutil/parser/_parser.py) (99 samples, 2.88%)</title><rect x="725" y="420" width="34" height="15" fill="rgb(223,66,6)"/><text x="728.00" y="430.50">__..</text></g><g><title>get_token (dateutil/parser/_parser.py) (95 samples, 2.76%)</title><rect x="726" y="436" width="33" height="15" fill="rgb(211,209,43)"/><text x="729.00" y="446.50">ge..</text></g><g><title>isword (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="757" y="452" width="2" height="15" fill="rgb(228,13,41)"/><text x="760.00" y="462.50"></text></g><g><title>validate (dateutil/parser/_parser.py) (5 samples, 0.15%)</title><rect x="759" y="404" width="2" height="15" fill="rgb(235,187,46)"/><text x="762.00" y="414.50"></text></g><g><title>extract_dates (jupyter_client/jsonutil.py) (383 samples, 11.13%)</title><rect x="631" y="324" width="131" height="15" fill="rgb(225,223,35)"/><text x="634.00" y="334.50">extract_dates (j..</text></g><g><title>parse_date (jupyter_client/jsonutil.py) (373 samples, 10.84%)</title><rect x="634" y="340" width="128" height="15" fill="rgb(232,122,32)"/><text x="637.00" y="350.50">parse_date (jupy..</text></g><g><title>parse (dateutil/parser/_parser.py) (351 samples, 10.20%)</title><rect x="642" y="356" width="120" height="15" fill="rgb(208,127,52)"/><text x="645.00" y="366.50">parse (dateuti..</text></g><g><title>parse (dateutil/parser/_parser.py) (349 samples, 10.14%)</title><rect x="642" y="372" width="120" height="15" fill="rgb(217,181,28)"/><text x="645.00" y="382.50">parse (dateuti..</text></g><g><title>_parse (dateutil/parser/_parser.py) (294 samples, 8.54%)</title><rect x="661" y="388" width="101" height="15" fill="rgb(250,77,36)"/><text x="664.00" y="398.50">_parse (date..</text></g><g><title>weekday (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="761" y="404" width="1" height="15" fill="rgb(211,162,3)"/><text x="764.00" y="414.50"></text></g><g><title>extract_dates (jupyter_client/jsonutil.py) (392 samples, 11.39%)</title><rect x="628" y="308" width="134" height="15" fill="rgb(238,218,17)"/><text x="631.00" y="318.50">extract_dates (j..</text></g><g><title>copy (hmac.py) (9 samples, 0.26%)</title><rect x="764" y="324" width="3" height="15" fill="rgb(252,6,53)"/><text x="767.00" y="334.50"></text></g><g><title>hexdigest (hmac.py) (5 samples, 0.15%)</title><rect x="767" y="324" width="2" height="15" fill="rgb(249,39,45)"/><text x="770.00" y="334.50"></text></g><g><title>_current (hmac.py) (4 samples, 0.12%)</title><rect x="768" y="340" width="1" height="15" fill="rgb(234,208,7)"/><text x="771.00" y="350.50"></text></g><g><title>deserialize (jupyter_client/session.py) (488 samples, 14.18%)</title><rect x="603" y="292" width="167" height="15" fill="rgb(217,85,5)"/><text x="606.00" y="302.50">deserialize (jupyter_..</text></g><g><title>sign (jupyter_client/session.py) (24 samples, 0.70%)</title><rect x="762" y="308" width="8" height="15" fill="rgb(228,108,7)"/><text x="765.00" y="318.50"></text></g><g><title>update (hmac.py) (4 samples, 0.12%)</title><rect x="769" y="324" width="1" height="15" fill="rgb(229,2,30)"/><text x="772.00" y="334.50"></text></g><g><title>_dispatch_iopub (decorator.py:decorator-gen-145&gt;) (538 samples, 15.63%)</title><rect x="588" y="260" width="184" height="15" fill="rgb(229,214,50)"/><text x="591.00" y="270.50">_dispatch_iopub (decora..</text></g><g><title>unpack_message (ipyparallel/client/client.py) (536 samples, 15.58%)</title><rect x="588" y="276" width="184" height="15" fill="rgb(221,81,52)"/><text x="591.00" y="286.50">unpack_message (ipypara..</text></g><g><title>feed_identities (jupyter_client/session.py) (5 samples, 0.15%)</title><rect x="770" y="292" width="2" height="15" fill="rgb(235,134,45)"/><text x="773.00" y="302.50"></text></g><g><title>_to_decimal (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="784" y="420" width="2" height="15" fill="rgb(215,172,52)"/><text x="787.00" y="430.50"></text></g><g><title>append (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="786" y="420" width="1" height="15" fill="rgb(213,151,38)"/><text x="789.00" y="430.50"></text></g><g><title>_parse_numeric_token (dateutil/parser/_parser.py) (13 samples, 0.38%)</title><rect x="783" y="404" width="4" height="15" fill="rgb(224,68,24)"/><text x="786.00" y="414.50"></text></g><g><title>isspace (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="794" y="452" width="1" height="15" fill="rgb(207,221,23)"/><text x="797.00" y="462.50"></text></g><g><title>split (dateutil/parser/_parser.py) (25 samples, 0.73%)</title><rect x="787" y="404" width="9" height="15" fill="rgb(217,81,5)"/><text x="790.00" y="414.50"></text></g><g><title>__next__ (dateutil/parser/_parser.py) (21 samples, 0.61%)</title><rect x="789" y="420" width="7" height="15" fill="rgb(252,156,42)"/><text x="792.00" y="430.50"></text></g><g><title>get_token (dateutil/parser/_parser.py) (19 samples, 0.55%)</title><rect x="789" y="436" width="7" height="15" fill="rgb(225,148,2)"/><text x="792.00" y="446.50"></text></g><g><title>_parse_date (ipyparallel/util.py) (57 samples, 1.66%)</title><rect x="777" y="340" width="19" height="15" fill="rgb(240,124,11)"/><text x="780.00" y="350.50"></text></g><g><title>parse (dateutil/parser/_parser.py) (51 samples, 1.48%)</title><rect x="779" y="356" width="17" height="15" fill="rgb(230,1,15)"/><text x="782.00" y="366.50"></text></g><g><title>parse (dateutil/parser/_parser.py) (51 samples, 1.48%)</title><rect x="779" y="372" width="17" height="15" fill="rgb(234,38,43)"/><text x="782.00" y="382.50"></text></g><g><title>_parse (dateutil/parser/_parser.py) (46 samples, 1.34%)</title><rect x="780" y="388" width="16" height="15" fill="rgb(219,195,4)"/><text x="783.00" y="398.50"></text></g><g><title>_extract_metadata (ipyparallel/client/client.py) (64 samples, 1.86%)</title><rect x="776" y="324" width="22" height="15" fill="rgb(215,147,52)"/><text x="779.00" y="334.50">_..</text></g><g><title>deserialize_object (ipyparallel/serialize/serialize.py) (12 samples, 0.35%)</title><rect x="798" y="324" width="4" height="15" fill="rgb(253,200,19)"/><text x="801.00" y="334.50"></text></g><g><title>uncan_sequence (ipyparallel/serialize/canning.py) (3 samples, 0.09%)</title><rect x="801" y="340" width="1" height="15" fill="rgb(229,215,48)"/><text x="804.00" y="350.50"></text></g><g><title>_resolve_result (ipyparallel/client/asyncresult.py) (3 samples, 0.09%)</title><rect x="804" y="420" width="1" height="15" fill="rgb(249,148,20)"/><text x="807.00" y="430.50"></text></g><g><title>set_result (concurrent/futures/_base.py) (3 samples, 0.09%)</title><rect x="804" y="436" width="1" height="15" fill="rgb(247,33,18)"/><text x="807.00" y="446.50"></text></g><g><title>future_set_result_unless_cancelled (ipyparallel/client/futures.py) (9 samples, 0.26%)</title><rect x="803" y="372" width="3" height="15" fill="rgb(205,198,41)"/><text x="806.00" y="382.50"></text></g><g><title>set_result (concurrent/futures/_base.py) (9 samples, 0.26%)</title><rect x="803" y="388" width="3" height="15" fill="rgb(225,51,34)"/><text x="806.00" y="398.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py) (8 samples, 0.23%)</title><rect x="803" y="404" width="3" height="15" fill="rgb(223,221,28)"/><text x="806.00" y="414.50"></text></g><g><title>_invoke_callbacks (concurrent/futures/_base.py) (16 samples, 0.46%)</title><rect x="802" y="340" width="5" height="15" fill="rgb(226,190,8)"/><text x="805.00" y="350.50"></text></g><g><title>callback (ipyparallel/client/futures.py) (14 samples, 0.41%)</title><rect x="803" y="356" width="4" height="15" fill="rgb(231,12,46)"/><text x="806.00" y="366.50"></text></g><g><title>result (concurrent/futures/_base.py) (4 samples, 0.12%)</title><rect x="806" y="372" width="1" height="15" fill="rgb(207,183,49)"/><text x="809.00" y="382.50"></text></g><g><title>_dispatch_reply (ipyparallel/client/client.py) (103 samples, 2.99%)</title><rect x="773" y="292" width="35" height="15" fill="rgb(213,218,30)"/><text x="776.00" y="302.50">_d..</text></g><g><title>_handle_apply_reply (ipyparallel/client/client.py) (102 samples, 2.96%)</title><rect x="773" y="308" width="35" height="15" fill="rgb(206,39,19)"/><text x="776.00" y="318.50">_h..</text></g><g><title>set_result (concurrent/futures/_base.py) (19 samples, 0.55%)</title><rect x="802" y="324" width="6" height="15" fill="rgb(223,206,51)"/><text x="805.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (jupyter_client/session.py) (18 samples, 0.52%)</title><rect x="811" y="308" width="6" height="15" fill="rgb(252,142,10)"/><text x="814.00" y="318.50"></text></g><g><title>loads (zmq/utils/jsonapi.py) (18 samples, 0.52%)</title><rect x="811" y="324" width="6" height="15" fill="rgb(241,131,38)"/><text x="814.00" y="334.50"></text></g><g><title>loads (simplejson/__init__.py) (16 samples, 0.46%)</title><rect x="812" y="340" width="5" height="15" fill="rgb(244,147,42)"/><text x="815.00" y="350.50"></text></g><g><title>decode (simplejson/decoder.py) (16 samples, 0.46%)</title><rect x="812" y="356" width="5" height="15" fill="rgb(214,225,22)"/><text x="815.00" y="366.50"></text></g><g><title>raw_decode (simplejson/decoder.py) (14 samples, 0.41%)</title><rect x="812" y="372" width="5" height="15" fill="rgb(226,50,0)"/><text x="815.00" y="382.50"></text></g><g><title>__get__ (traitlets/traitlets.py) (5 samples, 0.15%)</title><rect x="817" y="308" width="2" height="15" fill="rgb(233,56,10)"/><text x="820.00" y="318.50"></text></g><g><title>get (traitlets/traitlets.py) (4 samples, 0.12%)</title><rect x="817" y="324" width="2" height="15" fill="rgb(208,100,14)"/><text x="820.00" y="334.50"></text></g><g><title>__len__ (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="826" y="388" width="1" height="15" fill="rgb(219,57,21)"/><text x="829.00" y="398.50"></text></g><g><title>_build_naive (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="827" y="388" width="1" height="15" fill="rgb(217,52,25)"/><text x="830.00" y="398.50"></text></g><g><title>_build_tzaware (dateutil/parser/_parser.py) (4 samples, 0.12%)</title><rect x="828" y="388" width="1" height="15" fill="rgb(234,62,23)"/><text x="831.00" y="398.50"></text></g><g><title>__init__ (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="835" y="404" width="1" height="15" fill="rgb(241,177,41)"/><text x="838.00" y="414.50"></text></g><g><title>_parsems (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="841" y="420" width="1" height="15" fill="rgb(237,114,9)"/><text x="844.00" y="430.50"></text></g><g><title>append (dateutil/parser/_parser.py) (7 samples, 0.20%)</title><rect x="843" y="420" width="2" height="15" fill="rgb(244,137,25)"/><text x="846.00" y="430.50"></text></g><g><title>_parse_numeric_token (dateutil/parser/_parser.py) (26 samples, 0.76%)</title><rect x="837" y="404" width="9" height="15" fill="rgb(225,98,42)"/><text x="840.00" y="414.50"></text></g><g><title>resolve_ymd (dateutil/parser/_parser.py) (3 samples, 0.09%)</title><rect x="847" y="404" width="1" height="15" fill="rgb(216,162,2)"/><text x="850.00" y="414.50"></text></g><g><title>__init__ (dateutil/parser/_parser.py) (6 samples, 0.17%)</title><rect x="848" y="420" width="2" height="15" fill="rgb(212,132,31)"/><text x="851.00" y="430.50"></text></g><g><title>split (dateutil/parser/_parser.py) (37 samples, 1.08%)</title><rect x="848" y="404" width="12" height="15" fill="rgb(245,60,14)"/><text x="851.00" y="414.50"></text></g><g><title>__next__ (dateutil/parser/_parser.py) (30 samples, 0.87%)</title><rect x="850" y="420" width="10" height="15" fill="rgb(223,72,35)"/><text x="853.00" y="430.50"></text></g><g><title>get_token (dateutil/parser/_parser.py) (25 samples, 0.73%)</title><rect x="852" y="436" width="8" height="15" fill="rgb(216,89,44)"/><text x="855.00" y="446.50"></text></g><g><title>extract_dates (jupyter_client/jsonutil.py) (119 samples, 3.46%)</title><rect x="820" y="324" width="41" height="15" fill="rgb(206,202,4)"/><text x="823.00" y="334.50">ext..</text></g><g><title>parse_date (jupyter_client/jsonutil.py) (116 samples, 3.37%)</title><rect x="821" y="340" width="40" height="15" fill="rgb(215,18,54)"/><text x="824.00" y="350.50">par..</text></g><g><title>parse (dateutil/parser/_parser.py) (109 samples, 3.17%)</title><rect x="824" y="356" width="37" height="15" fill="rgb(213,111,46)"/><text x="827.00" y="366.50">par..</text></g><g><title>parse (dateutil/parser/_parser.py) (109 samples, 3.17%)</title><rect x="824" y="372" width="37" height="15" fill="rgb(234,106,38)"/><text x="827.00" y="382.50">par..</text></g><g><title>_parse (dateutil/parser/_parser.py) (92 samples, 2.67%)</title><rect x="829" y="388" width="32" height="15" fill="rgb(229,107,45)"/><text x="832.00" y="398.50">_p..</text></g><g><title>extract_dates (jupyter_client/jsonutil.py) (122 samples, 3.55%)</title><rect x="819" y="308" width="42" height="15" fill="rgb(245,162,6)"/><text x="822.00" y="318.50">ext..</text></g><g><title>deserialize (jupyter_client/session.py) (163 samples, 4.74%)</title><rect x="808" y="292" width="56" height="15" fill="rgb(213,161,44)"/><text x="811.00" y="302.50">deser..</text></g><g><title>sign (jupyter_client/session.py) (8 samples, 0.23%)</title><rect x="861" y="308" width="3" height="15" fill="rgb(246,155,53)"/><text x="864.00" y="318.50"></text></g><g><title>update (hmac.py) (3 samples, 0.09%)</title><rect x="863" y="324" width="1" height="15" fill="rgb(211,205,50)"/><text x="866.00" y="334.50"></text></g><g><title>_run_callback (zmq/eventloop/zmqstream.py) (818 samples, 23.77%)</title><rect x="587" y="244" width="281" height="15" fill="rgb(239,22,39)"/><text x="590.00" y="254.50">_run_callback (zmq/eventloop/zmqstrea..</text></g><g><title>_dispatch_reply (decorator.py:decorator-gen-144&gt;) (279 samples, 8.11%)</title><rect x="772" y="260" width="96" height="15" fill="rgb(241,227,32)"/><text x="775.00" y="270.50">_dispatch_r..</text></g><g><title>unpack_message (ipyparallel/client/client.py) (278 samples, 8.08%)</title><rect x="773" y="276" width="95" height="15" fill="rgb(240,194,34)"/><text x="776.00" y="286.50">unpack_mess..</text></g><g><title>feed_identities (jupyter_client/session.py) (11 samples, 0.32%)</title><rect x="864" y="292" width="4" height="15" fill="rgb(248,53,37)"/><text x="867.00" y="302.50"></text></g><g><title>_handle_recv (zmq/eventloop/zmqstream.py) (909 samples, 26.42%)</title><rect x="585" y="228" width="311" height="15" fill="rgb(253,70,32)"/><text x="588.00" y="238.50">_handle_recv (zmq/eventloop/zmqstream.py)</text></g><g><title>recv_multipart (zmq/sugar/socket.py) (83 samples, 2.41%)</title><rect x="868" y="244" width="28" height="15" fill="rgb(218,45,33)"/><text x="871.00" y="254.50">r..</text></g><g><title>get (queue.py) (4 samples, 0.12%)</title><rect x="897" y="244" width="2" height="15" fill="rgb(218,21,42)"/><text x="900.00" y="254.50"></text></g><g><title>send_multipart (zmq/sugar/socket.py) (632 samples, 18.37%)</title><rect x="899" y="244" width="216" height="15" fill="rgb(226,116,8)"/><text x="902.00" y="254.50">send_multipart (zmq/sugar/so..</text></g><g><title>send (zmq/sugar/socket.py) (615 samples, 17.87%)</title><rect x="905" y="260" width="210" height="15" fill="rgb(220,180,38)"/><text x="908.00" y="270.50">send (zmq/sugar/socket.py)</text></g><g><title>_handle_send (zmq/eventloop/zmqstream.py) (640 samples, 18.60%)</title><rect x="896" y="228" width="220" height="15" fill="rgb(235,31,9)"/><text x="899.00" y="238.50">_handle_send (zmq/eventloop/z..</text></g><g><title>__getattr__ (zmq/sugar/attrsettr.py) (25 samples, 0.73%)</title><rect x="1121" y="260" width="8" height="15" fill="rgb(220,196,11)"/><text x="1124.00" y="270.50"></text></g><g><title>_get_attr_opt (zmq/sugar/attrsettr.py) (21 samples, 0.61%)</title><rect x="1122" y="276" width="7" height="15" fill="rgb(205,108,35)"/><text x="1125.00" y="286.50"></text></g><g><title>_update_handler (zmq/eventloop/zmqstream.py) (43 samples, 1.25%)</title><rect x="1119" y="244" width="15" height="15" fill="rgb(250,227,9)"/><text x="1122.00" y="254.50"></text></g><g><title>add_callback (tornado/platform/asyncio.py) (13 samples, 0.38%)</title><rect x="1129" y="260" width="5" height="15" fill="rgb(227,81,54)"/><text x="1132.00" y="270.50"></text></g><g><title>call_soon (asyncio/base_events.py) (9 samples, 0.26%)</title><rect x="1131" y="276" width="3" height="15" fill="rgb(223,26,41)"/><text x="1134.00" y="286.50"></text></g><g><title>_call_soon (asyncio/base_events.py) (8 samples, 0.23%)</title><rect x="1131" y="292" width="3" height="15" fill="rgb(208,85,1)"/><text x="1134.00" y="302.50"></text></g><g><title>__init__ (asyncio/events.py) (4 samples, 0.12%)</title><rect x="1133" y="308" width="1" height="15" fill="rgb(230,188,14)"/><text x="1136.00" y="318.50"></text></g><g><title>_rebuild_io_state (zmq/eventloop/zmqstream.py) (60 samples, 1.74%)</title><rect x="1116" y="228" width="20" height="15" fill="rgb(219,22,38)"/><text x="1119.00" y="238.50"></text></g><g><title>sending (zmq/eventloop/zmqstream.py) (7 samples, 0.20%)</title><rect x="1134" y="244" width="2" height="15" fill="rgb(233,7,25)"/><text x="1137.00" y="254.50"></text></g><g><title>empty (queue.py) (5 samples, 0.15%)</title><rect x="1135" y="260" width="1" height="15" fill="rgb(234,132,29)"/><text x="1138.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (zmq/eventloop/zmqstream.py) (1,674 samples, 48.65%)</title><rect x="563" y="196" width="574" height="15" fill="rgb(217,54,42)"/><text x="566.00" y="206.50">&lt;lambda&gt; (zmq/eventloop/zmqstream.py)</text></g><g><title>_handle_events (zmq/eventloop/zmqstream.py) (1,670 samples, 48.53%)</title><rect x="565" y="212" width="572" height="15" fill="rgb(244,130,22)"/><text x="568.00" y="222.50">_handle_events (zmq/eventloop/zmqstream.py)</text></g><g><title>__getattr__ (zmq/sugar/attrsettr.py) (10 samples, 0.29%)</title><rect x="1143" y="276" width="3" height="15" fill="rgb(247,107,24)"/><text x="1146.00" y="286.50"></text></g><g><title>_get_attr_opt (zmq/sugar/attrsettr.py) (7 samples, 0.20%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(210,2,35)"/><text x="1147.00" y="302.50"></text></g><g><title>_add_io_state (zmq/eventloop/zmqstream.py) (14 samples, 0.41%)</title><rect x="1142" y="244" width="5" height="15" fill="rgb(231,111,7)"/><text x="1145.00" y="254.50"></text></g><g><title>_update_handler (zmq/eventloop/zmqstream.py) (14 samples, 0.41%)</title><rect x="1142" y="260" width="5" height="15" fill="rgb(250,64,12)"/><text x="1145.00" y="270.50"></text></g><g><title>add_callback (tornado/platform/asyncio.py) (3 samples, 0.09%)</title><rect x="1146" y="276" width="1" height="15" fill="rgb(205,120,42)"/><text x="1149.00" y="286.50"></text></g><g><title>send_multipart (zmq/eventloop/zmqstream.py) (19 samples, 0.55%)</title><rect x="1141" y="228" width="7" height="15" fill="rgb(243,18,31)"/><text x="1144.00" y="238.50"></text></g><g><title>__init__ (simplejson/encoder.py) (8 samples, 0.23%)</title><rect x="1155" y="292" width="3" height="15" fill="rgb(238,65,25)"/><text x="1158.00" y="302.50"></text></g><g><title>date_default (jupyter_client/jsonutil.py) (3 samples, 0.09%)</title><rect x="1176" y="324" width="1" height="15" fill="rgb(240,167,52)"/><text x="1179.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (jupyter_client/session.py) (101 samples, 2.94%)</title><rect x="1149" y="244" width="35" height="15" fill="rgb(224,172,6)"/><text x="1152.00" y="254.50">&lt;l..</text></g><g><title>dumps (zmq/utils/jsonapi.py) (96 samples, 2.79%)</title><rect x="1151" y="260" width="33" height="15" fill="rgb(224,216,43)"/><text x="1154.00" y="270.50">du..</text></g><g><title>dumps (simplejson/__init__.py) (91 samples, 2.64%)</title><rect x="1152" y="276" width="32" height="15" fill="rgb(227,100,54)"/><text x="1155.00" y="286.50">du..</text></g><g><title>encode (simplejson/encoder.py) (76 samples, 2.21%)</title><rect x="1158" y="292" width="26" height="15" fill="rgb(224,159,28)"/><text x="1161.00" y="302.50">e..</text></g><g><title>iterencode (simplejson/encoder.py) (65 samples, 1.89%)</title><rect x="1161" y="308" width="23" height="15" fill="rgb(250,171,37)"/><text x="1164.00" y="318.50">i..</text></g><g><title>encode_basestring (simplejson/encoder.py) (20 samples, 0.58%)</title><rect x="1177" y="324" width="7" height="15" fill="rgb(214,68,20)"/><text x="1180.00" y="334.50"></text></g><g><title>hexdigest (hmac.py) (6 samples, 0.17%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(243,58,7)"/><text x="1188.00" y="270.50"></text></g><g><title>_current (hmac.py) (3 samples, 0.09%)</title><rect x="1186" y="276" width="1" height="15" fill="rgb(218,153,25)"/><text x="1189.00" y="286.50"></text></g><g><title>_run (asyncio/events.py) (2,454 samples, 71.32%)</title><rect x="346" y="164" width="841" height="15" fill="rgb(227,171,31)"/><text x="349.00" y="174.50">_run (asyncio/events.py)</text></g><g><title>_run_callback (tornado/ioloop.py) (1,824 samples, 53.01%)</title><rect x="562" y="180" width="625" height="15" fill="rgb(211,51,30)"/><text x="565.00" y="190.50">_run_callback (tornado/ioloop.py)</text></g><g><title>_really_send (ipyparallel/client/client.py) (146 samples, 4.24%)</title><rect x="1137" y="196" width="50" height="15" fill="rgb(216,152,26)"/><text x="1140.00" y="206.50">_real..</text></g><g><title>send (jupyter_client/session.py) (145 samples, 4.21%)</title><rect x="1138" y="212" width="49" height="15" fill="rgb(250,116,49)"/><text x="1141.00" y="222.50">send..</text></g><g><title>serialize (jupyter_client/session.py) (116 samples, 3.37%)</title><rect x="1148" y="228" width="39" height="15" fill="rgb(205,116,8)"/><text x="1151.00" y="238.50">ser..</text></g><g><title>sign (jupyter_client/session.py) (10 samples, 0.29%)</title><rect x="1184" y="244" width="3" height="15" fill="rgb(213,198,16)"/><text x="1187.00" y="254.50"></text></g><g><title>select (selectors.py) (3 samples, 0.09%)</title><rect x="1187" y="164" width="1" height="15" fill="rgb(217,91,44)"/><text x="1190.00" y="174.50"></text></g><g><title>_key_from_fd (selectors.py) (3 samples, 0.09%)</title><rect x="1187" y="180" width="1" height="15" fill="rgb(211,120,36)"/><text x="1190.00" y="190.50"></text></g><g><title>all (3,441 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(231,92,16)"/><text x="13.00" y="46.50"></text></g><g><title>_bootstrap (threading.py) (2,494 samples, 72.48%)</title><rect x="334" y="52" width="856" height="15" fill="rgb(253,45,2)"/><text x="337.00" y="62.50">_bootstrap (threading.py)</text></g><g><title>_bootstrap_inner (threading.py) (2,494 samples, 72.48%)</title><rect x="334" y="68" width="856" height="15" fill="rgb(254,184,28)"/><text x="337.00" y="78.50">_bootstrap_inner (threading.py)</text></g><g><title>run (threading.py) (2,494 samples, 72.48%)</title><rect x="334" y="84" width="856" height="15" fill="rgb(221,204,30)"/><text x="337.00" y="94.50">run (threading.py)</text></g><g><title>_io_main (ipyparallel/client/client.py) (2,494 samples, 72.48%)</title><rect x="334" y="100" width="856" height="15" fill="rgb(253,80,52)"/><text x="337.00" y="110.50">_io_main (ipyparallel/client/client.py)</text></g><g><title>start (tornado/platform/asyncio.py) (2,494 samples, 72.48%)</title><rect x="334" y="116" width="856" height="15" fill="rgb(247,72,48)"/><text x="337.00" y="126.50">start (tornado/platform/asyncio.py)</text></g><g><title>run_forever (asyncio/base_events.py) (2,494 samples, 72.48%)</title><rect x="334" y="132" width="856" height="15" fill="rgb(248,104,36)"/><text x="337.00" y="142.50">run_forever (asyncio/base_events.py)</text></g><g><title>_run_once (asyncio/base_events.py) (2,493 samples, 72.45%)</title><rect x="335" y="148" width="855" height="15" fill="rgb(247,197,40)"/><text x="338.00" y="158.50">_run_once (asyncio/base_events.py)</text></g><g><title>time (asyncio/base_events.py) (3 samples, 0.09%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(224,163,6)"/><text x="1191.00" y="174.50"></text></g></g></svg>